}
}
else {
if(throwing_hand != "All") {
url <- paste0("https://baseballsavant.mlb.com/leaderboard/spin-direction-pitches?year=2020&min=", num_pitches, "&sort=9&sortDir=asc$pitch_type=", pitch_type, "&throws=", throwing_hand, "&playerName=&team=", team, "&csv=true")
} else {
url <- paste0("https://baseballsavant.mlb.com/leaderboard/spin-direction-pitches?year=2020&min=", num_pitches, "&sort=9&sortDir=asc$pitch_type=", pitch_type, "&throws=&playerName=&team=", team, "&csv=true")
}
}
payload <- read_csv(url)
return(payload)
}
spin_axis_data <- spin_direction_leaderboard(1, pitch_type = "CU", throwing_hand = "R", team = "CHC")
spin_axis_data <- spin_direction_leaderboard(1)
View(spin_axis_data)
spin_axis_data %>% filter(api_pitch_type == "FF")
spin_axis_data %>% filter(api_pitch_type == "SI")
spin_axis_data %>% filter(api_pitch_type == "FF")
sc_2020 <- sc_2020 %>% mutate(zone_loc = case_when(zone == 1 | zone == 2 | zone == 3 ~ "High",
zone == 4 | zone == 5 | zone == 6 ~ "Medium",
zone == 7 | zone == 8 | zone == 9 ~ "Low",
plate_z >= 3.5 ~ "High",
zone == 13 | zone == 14 ~ "Low",
plate_z <= 1.6 ~ "Low",
TRUE ~ NA_character_))
sc_2020 <- left_join(sc_2020, spin_axis_data, by=c("pitcher" = "player_id", "pitch_name" = "api_pitch_name"))
data <- sc_2020 %>%
filter(pitch_type == "FF") %>%
group_by(hawkeye_measured_clock_label, p_throws) %>%
summarize(n_pitches = n(),
spin_rate = mean(release_spin_rate, na.rm = T))
data
View(data)
ggplot(data) + geom_bar(aes(hawkeye_measured_clock_label, ), stat = "identity")
library(ggplot2)
ggplot(data) + geom_bar(aes(hawkeye_measured_clock_label, ), stat = "identity")
ggplot(data) + geom_bar(aes(hawkeye_measured_clock_label, spin_rate), stat = "identity")
ggplot() + geom_bar(aes(hawkeye_measured_clock_label, n_pitches), stat = "identity") +
geom_bar(aes(hawkeye_measured_clock_label, n_pitches, fill = spin_rate),
position = "dodge", stat = "identity") +
theme_classic() +
ggtitle("Spin Direction Distribution on Low Sinkers") +
facet_wrap(~p_throws)
ggplot(data) + geom_bar(aes(hawkeye_measured_clock_label, n_pitches), stat = "identity")
ggplot(data) + geom_bar(aes(hawkeye_measured_clock_label, n_pitches, fill = spin_rate), stat = "identity")
ggplot() + geom_bar(aes(hawkeye_measured_clock_label, n_pitches), stat = "identity") +
geom_bar(aes(hawkeye_measured_clock_label, n_pitches, fill = spin_rate),
position = "dodge", stat = "identity") +
theme_classic() +
ggtitle("Spin Direction Distribution on Low Sinkers") +
facet_wrap(~p_throws)
ggplot(data) + geom_bar(aes(hawkeye_measured_clock_label, n_pitches, fill = spin_rate), position = "dodge", stat = "identity") +
theme_classic()
ggplot(data) + geom_bar(aes(hawkeye_measured_clock_label, n_pitches, fill = spin_rate), position = "dodge", stat = "identity") +
theme_classic() + facet_wrap(~p_throws)
sc_2020 %>%
filter(pitch_type == "FF") %>%
group_by(hawkeye_measured_clock_label, p_throws) %>%
summarize(n_pitches = n(),
spin_rate = mean(release_spin_rate, na.rm = T)) %>%
ggplot() + geom_bar(aes(hawkeye_measured_clock_label, n_pitches, fill = spin_rate), position = "dodge", stat = "identity") +
theme_classic() + facet_wrap(~p_throws)
sc_2020 %>%
filter(pitch_type == "FF", zone_loc = "Low") %>%
group_by(hawkeye_measured_clock_label, p_throws) %>%
summarize(n_pitches = n(),
spin_rate = mean(release_spin_rate, na.rm = T)) %>%
ggplot() + geom_bar(aes(hawkeye_measured_clock_label, n_pitches, fill = spin_rate), position = "dodge", stat = "identity") +
theme_classic() + facet_wrap(~p_throws) + ggtitle("Spin Direction Distribution on FF")
sc_2020 %>%
filter(pitch_type == "FF", zone_loc == "Low") %>%
group_by(hawkeye_measured_clock_label, p_throws) %>%
summarize(n_pitches = n(),
spin_rate = mean(release_spin_rate, na.rm = T)) %>%
ggplot() + geom_bar(aes(hawkeye_measured_clock_label, n_pitches, fill = spin_rate), position = "dodge", stat = "identity") +
theme_classic() + facet_wrap(~p_throws) + ggtitle("Spin Direction Distribution on Low FF")
theme_classic() + facet_wrap(~p_throws) + ggtitle("Spin Direction Distribution on Low FF", subtitle = "Active Spin Percentage by Clock Time"
sc_2020 %>%
filter(pitch_type == "FF", zone_loc == "Low") %>%
group_by(hawkeye_measured_clock_label, p_throws) %>%
summarize(n_pitches = n(),
active_spin = mean(active_spin, na.rm = T)) %>%
ggplot() + geom_bar(aes(hawkeye_measured_clock_label, n_pitches, fill = active_spin), position = "dodge", stat = "identity") +
theme_classic() + facet_wrap(~p_throws) + ggtitle("Spin Direction Distribution on Low FF", subtitle = "Active Spin Percentage by Clock Time")
spin_efficiency <- sc_2020 %>%
filter(pitch_type == "FF", zone_loc == "Low") %>%
group_by(hawkeye_measured_clock_label, p_throws) %>%
summarize(n_pitches = n(),
spin_rate = mean(release_spin_rate, na.rm = T)) %>%
ggplot() + geom_bar(aes(hawkeye_measured_clock_label, n_pitches, fill = spin_rate), position = "dodge", stat = "identity") +
theme_classic() + facet_wrap(~p_throws) + ggtitle("Spin Direction Distribution on Low FF")
active_spinrate <- sc_2020 %>%
filter(pitch_type == "FF", zone_loc == "Low") %>%
group_by(hawkeye_measured_clock_label, p_throws) %>%
summarize(n_pitches = n(),
active_spin = mean(active_spin, na.rm = T)) %>%
ggplot() + geom_bar(aes(hawkeye_measured_clock_label, n_pitches, fill = active_spin), position = "dodge", stat = "identity") +
theme_classic() + facet_wrap(~p_throws) + ggtitle("Spin Direction Distribution on Low FF", subtitle = "Active Spin Percentage by Clock Time")
library(ggarrange)
library(ggpubr)
ggarrange(spin_efficiency, active_spinrate)
ggarrange(spin_efficiency, active_spinrate, ncol = 1, nrow = 2)
debugSource("C:/Users/Riku/R_projects2022/spin_direction.R")
n
debugSource("C:/Users/Riku/R_projects2022/spin_direction.R")
library(tidyverse)
library(tidyverse)
library(xml2)
library(rvest)
library(dplyr)
library(readr)
library(ggplot2)
library(ggpubr)
debugSource("C:/Users/Riku/R_projects2022/spin_direction.R")
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
#import libraries
library(DBI)
library(RSQLite)
library(baseballr)
library(dplyr)
library(ggplot2)
library(plyr)
#devtools::install_github("BillPetti/baseballr")
# db <- dbConnect(SQLite(), "statcast_db.sqlite")
# dbListTables(db)
# sc <- dbGetQuery(db, "select * from statcast_data")
# dbDisconnect(db)
#Obtain data for MLB season 2021
data <- read.csv("C:/Users/12244/CSV_2021/sc.csv")
data_5 <- data %>%
filter(launch_angle >= 2.5 & launch_angle <= 7.5)
View(data_5)
Ohtani_plot <- plot_ev_vs_la("Ohtani, Shohei")
#Function for plotting Exit Velocity vs Launch Angle
plot_ev_vs_la <- function(batter) {
#Narrow data into Batter Name, Exit Velocity, and Launch Angle with non NA value
data_batter <- data %>%
select(player_name, launch_speed, launch_angle) %>%
na.omit() %>%
filter(player_name == batter)
#Label data with launch angle for every bins of width 5 degrees
data_batter <- data_batter %>%
mutate(group = case_when(launch_angle < -85 ~ "A",
launch_angle >= -85 & launch_angle < -80 ~ "B",
launch_angle >= -80 & launch_angle < -75 ~ "C",
launch_angle >= -75 & launch_angle < -70 ~ "D",
launch_angle >= -70 & launch_angle < -65 ~ "E",
launch_angle >= -65 & launch_angle < -60 ~ "F",
launch_angle >= -60 & launch_angle < -55 ~ "G",
launch_angle >= -55 & launch_angle < -50 ~ "H",
launch_angle >= -50 & launch_angle < -45 ~ "I",
launch_angle >= -45 & launch_angle < -40 ~ "J",
launch_angle >= -40 & launch_angle < -35 ~ "K",
launch_angle >= -35 & launch_angle < -30 ~ "L",
launch_angle >= -30 & launch_angle < -25 ~ "M",
launch_angle >= -25 & launch_angle < -20 ~ "N",
launch_angle >= -20 & launch_angle < -15 ~ "O",
launch_angle >= -15 & launch_angle < -10 ~ "P",
launch_angle >= -10 & launch_angle < -5 ~ "Q",
launch_angle >= -5 & launch_angle < 0 ~ "R",
launch_angle >= 0 & launch_angle < 5 ~ "S",
launch_angle >= 5 & launch_angle < 10 ~ "T",
launch_angle >= 10 & launch_angle < 15 ~ "U",
launch_angle >= 15 & launch_angle < 20 ~ "V",
launch_angle >= 20 & launch_angle < 25 ~ "W",
launch_angle >= 25 & launch_angle < 30 ~ "X",
launch_angle >= 30 & launch_angle < 35 ~ "Y",
launch_angle >= 35 & launch_angle < 40 ~ "Z",
launch_angle >= 40 & launch_angle < 45 ~ "AA",
launch_angle >= 45 & launch_angle < 50 ~ "AB",
launch_angle >= 50 & launch_angle < 55 ~ "AC",
launch_angle >= 55 & launch_angle < 60 ~ "AD",
launch_angle >= 60 & launch_angle < 65 ~ "AE",
launch_angle >= 65 & launch_angle < 70 ~ "AF",
launch_angle >= 70 & launch_angle < 75 ~ "AG",
launch_angle >= 75 & launch_angle < 80 ~ "AH",
launch_angle >= 80 & launch_angle < 85 ~ "AI",
launch_angle >= 85 & launch_angle < 90 ~ "AJ",
launch_angle >= 90 & launch_angle < 95 ~ "AK"
))
#Create data set of top 10% exit velocity within each bins
top_10_data <- data_batter %>%
group_by(group) %>%
slice_max(order_by = launch_speed, n = 5) %>%
mutate(top_10 = "Yes") %>%
filter(launch_angle > -40)
#Join two data
data2 <- left_join(data_batter, top_10_data, by = c("player_name", "launch_speed", "launch_angle", "group"))
#Indicate whether or not the exit velocity is in top 10%
data2 <- data2 %>%
mutate(top_10 = ifelse(is.na(top_10), "No", top_10)) %>%
filter(launch_angle > -40, launch_speed > 50)
#Create a quadratic regression for top 10% data
top_10_data$launch_angle2 = top_10_data$launch_angle^2
quadratic_fit <- lm(launch_speed ~ launch_angle + launch_angle2, data = top_10_data)
#Scatter plot data differentiating the top 10% points by color and indicating the maximum predicted value for the launch angle that gives the max exit velocity using the quadratic regression
ggplot(data2) +
geom_point(aes(launch_angle, launch_speed, color = top_10)) +
scale_color_manual(values = c("red", "blue")) +
stat_smooth(method = "lm", formula = y ~ x + I(x^2), data = top_10_data, aes(launch_angle, launch_speed), color = "black", se = FALSE) +
geom_vline(aes(xintercept = top_10_data$launch_angle[which.max(predict(quadratic_fit))]), linetype = "dashed") +
ggtitle(paste("Exit Velocity vs Launch Angle of", batter)) +
scale_x_continuous(name = "Launch Angle (deg)", breaks = seq(-40, 80, by = 10)) +
scale_y_continuous(name = "Exit Velocity (mph)", breaks = seq(50, 120, by = 20)) +
annotate(geom = "text", label = top_10_data$launch_angle[which.max(predict(quadratic_fit))], x = top_10_data$launch_angle[which.max(predict(quadratic_fit))], y = 50, vjust = 1)
}
#Run the plot
Ohtani_plot <- plot_ev_vs_la("Ohtani, Shohei")
Trout_plot <- plot_ev_vs_la("Trout, Mike")
install.packages("gridExtra")
library(gridExtra)
grid.arrange(Ohtani_plot, Trout_plot)
grid.arrange(Ohtani_plot, Trout_plot, ncol = 2)
Ohtani_plot + Trout_plot
install.packages("ggpubr")
library(ggpubr)
ggarrange(Ohtani_plot, Trout_plot)
#Run the plot
Ohtani_plot <- plot_ev_vs_la("Ohtani, Shohei")
Trout_plot <- plot_ev_vs_la("Trout, Mike")
ggarrange(Ohtani_plot, Trout_plot)
#Run the plot
Ohtani_plot <- plot_ev_vs_la("Ohtani, Shohei")
Harper_plot <- plot_ev_vs_la("Harper, Bryce")
ggarrange(Ohtani_plot, Harper_plot)
#Run the plot
Ohtani_plot <- plot_ev_vs_la("Ohtani, Shohei")
Stanton_plot <- plot_ev_vs_la("Stanton, Giancarlo")
ggarrange(Ohtani_plot, Stanton_plot)
rm(list = ls())
setwd("C:/Users/12244/R_projects2022")
connect_db <- function(db) {
con <- dbConnect(MySQL(),
user = "mbaadmin",
password = "gUZSaQAAwgDRhqZPPCqa",
dbname = db,
host = "prodbaseballmysqlohio.ciurqw3b29ox.us-east-2.rds.amazonaws.com")
return(con)
}
db <- connect_db("uiuc")
data <- dbGetQuery(db, "select * from fs_pitches where season = 2021")
dbDisconnect(db)
View(data)
K = 5.383 * 10^(-3)
rho = 0.0750 #lb / ft^3
r = 0.121 #ft
A = pi * r^2
m = #5.125oz (1lb / 0.0625oz)
m = 5.125 / 0.0625
K = 1 / 2 * rho * A / m
m = 5.125 / 0.0625
r = 0.121 #ft
A = pi * r^2
K = 1 / 2 * rho * A / m
1/2 * A / m
m = 5.125 #oz
1/2 * A / m
K = 1 / 2 * rho * A / (m / 0.0625)
K = 1 / 2 * rho * A / (m / 0.0625)
K = (1 / 2) * rho * A / (m / 0.0625)
1/2 * A / m
K = (1 / 2) * rho * A / (m * 0.0625)
data <- data %>%
mutate(yR = 60.5 - extension) %>%
tR = (- vy0 - sqrt((vy0)^2 - 2 * ay * (50 - yR)) / ay)
data <- data %>%
mutate(yR = 60.5 - extension,
tR = (- vy0 - sqrt((vy0)^2 - 2 * ay * (50 - yR)) / ay))
library(dplyr)
data <- data %>%
mutate(yR = 60.5 - extension,
tR = (- vy0 - sqrt((vy0)^2 - 2 * ay * (50 - yR)) / ay))
data <- data %>%
mutate(yR = 60.5 - extension,
tR = (- vy0 - sqrt((vy0)^2 - 2 * ay * (50 - yR))) / ay)
data <- data %>%
mutate(yR = 60.5 - extension,
tR = (- vy0 - sqrt((vy0)^2 - 2 * ay * (50 - yR))) / ay,
vxR = vx0 + ax * tR)
data <- data %>%
mutate(yR = 60.5 - extension,
tR = (- vy0 - sqrt((vy0)^2 - 2 * ay * (50 - yR))) / ay,
vxR = vx0 + ax * tR,
vyR = vy0 + ay * tR,
vzR = vz0 + az * tR)
data <- data %>%
mutate(yR = 60.5 - extension,
tR = (- vy0 - sqrt((vy0)^2 - 2 * ay * (50 - yR))) / ay,
vxR = vx0 + ax * tR,
vyR = vy0 + ay * tR,
vzR = vz0 + az * tR,
tf = (-vyR - sqrt((vyR)^2 - 2 * ay * (yR - 17 / 12))) / ay,
vxbar = (2 * vxR + ax * tf) / 2,
vybar = (2 * vyR + ay * tf) / 2,
vzbar = (2 * vzR + az * tf) / 2)
data <- data %>%
mutate(yR = 60.5 - extension,
tR = (- vy0 - sqrt((vy0)^2 - 2 * ay * (50 - yR))) / ay,
vxR = vx0 + ax * tR,
vyR = vy0 + ay * tR,
vzR = vz0 + az * tR,
tf = (-vyR - sqrt((vyR)^2 - 2 * ay * (yR - 17 / 12))) / ay,
vxbar = (2 * vxR + ax * tf) / 2,
vybar = (2 * vyR + ay * tf) / 2,
vzbar = (2 * vzR + az * tf) / 2,
vbar = sqrt(vxbar^2 + vybar^2 + vzbar^2))
View(data)
data <- data %>%
mutate(yR = 60.5 - extension,
tR = (- vy0 - sqrt((vy0)^2 - 2 * ay * (50 - yR))) / ay,
vxR = vx0 + ax * tR,
vyR = vy0 + ay * tR,
vzR = vz0 + az * tR,
tf = (-vyR - sqrt((vyR)^2 - 2 * ay * (yR - 17 / 12))) / ay,
vxbar = (2 * vxR + ax * tf) / 2,
vybar = (2 * vyR + ay * tf) / 2,
vzbar = (2 * vzR + az * tf) / 2,
vbar = sqrt(vxbar^2 + vybar^2 + vzbar^2),
aDrag = - (ax * vxbar + ay * vybar + (az + 32.174)(vzbar)) / vbar)
data <- data %>%
mutate(yR = 60.5 - extension,
tR = (- vy0 - sqrt((vy0)^2 - 2 * ay * (50 - yR))) / ay,
vxR = vx0 + ax * tR,
vyR = vy0 + ay * tR,
vzR = vz0 + az * tR,
tf = (-vyR - sqrt((vyR)^2 - 2 * ay * (yR - 17 / 12))) / ay,
vxbar = (2 * vxR + ax * tf) / 2,
vybar = (2 * vyR + ay * tf) / 2,
vzbar = (2 * vzR + az * tf) / 2,
vbar = sqrt(vxbar^2 + vybar^2 + vzbar^2),
aDrag = - (ax * vxbar + ay * vybar + (az + 32.174) * (vzbar)) / vbar)
data <- data %>%
mutate(yR = 60.5 - extension,
tR = (- vy0 - sqrt((vy0)^2 - 2 * ay * (50 - yR))) / ay,
vxR = vx0 + ax * tR,
vyR = vy0 + ay * tR,
vzR = vz0 + az * tR,
tf = (-vyR - sqrt((vyR)^2 - 2 * ay * (yR - 17 / 12))) / ay,
vxbar = (2 * vxR + ax * tf) / 2,
vybar = (2 * vyR + ay * tf) / 2,
vzbar = (2 * vzR + az * tf) / 2,
vbar = sqrt(vxbar^2 + vybar^2 + vzbar^2),
aDrag = - (ax * vxbar + ay * vybar + (az + 32.174) * (vzbar)) / vbar,
Cd = aDrag / (K * vbar^2))
View(data)
data <- data %>%
mutate(yR = 60.5 - extension,
tR = (- vy0 - sqrt((vy0)^2 - 2 * ay * (50 - yR))) / ay,
vxR = vx0 + ax * tR,
vyR = vy0 + ay * tR,
vzR = vz0 + az * tR,
tf = (-vyR - sqrt((vyR)^2 - 2 * ay * (yR - 17 / 12))) / ay,
vxbar = (2 * vxR + ax * tf) / 2,
vybar = (2 * vyR + ay * tf) / 2,
vzbar = (2 * vzR + az * tf) / 2,
vbar = sqrt(vxbar^2 + vybar^2 + vzbar^2),
aDrag = - (ax * vxbar + ay * vybar + (az + 32.174) * (vzbar)) / vbar,
Cd = aDrag / (K * vbar^2),
aMx = ax + aDrag * vxbar / vbar,
aMx = ay + aDrag * bybar / vbar,
aMz = az + aDrag * vzbar / vbar + 32.174,
aM = sqrt(aMx^2 + aMy^2 + aMz^2))
data <- data %>%
mutate(yR = 60.5 - extension,
tR = (- vy0 - sqrt((vy0)^2 - 2 * ay * (50 - yR))) / ay,
vxR = vx0 + ax * tR,
vyR = vy0 + ay * tR,
vzR = vz0 + az * tR,
tf = (-vyR - sqrt((vyR)^2 - 2 * ay * (yR - 17 / 12))) / ay,
vxbar = (2 * vxR + ax * tf) / 2,
vybar = (2 * vyR + ay * tf) / 2,
vzbar = (2 * vzR + az * tf) / 2,
vbar = sqrt(vxbar^2 + vybar^2 + vzbar^2),
aDrag = - (ax * vxbar + ay * vybar + (az + 32.174) * (vzbar)) / vbar,
Cd = aDrag / (K * vbar^2),
aMx = ax + aDrag * vxbar / vbar,
aMx = ay + aDrag * vybar / vbar,
aMz = az + aDrag * vzbar / vbar + 32.174,
aM = sqrt(aMx^2 + aMy^2 + aMz^2))
data <- data %>%
mutate(yR = 60.5 - extension,
tR = (- vy0 - sqrt((vy0)^2 - 2 * ay * (50 - yR))) / ay,
vxR = vx0 + ax * tR,
vyR = vy0 + ay * tR,
vzR = vz0 + az * tR,
tf = (-vyR - sqrt((vyR)^2 - 2 * ay * (yR - 17 / 12))) / ay,
vxbar = (2 * vxR + ax * tf) / 2,
vybar = (2 * vyR + ay * tf) / 2,
vzbar = (2 * vzR + az * tf) / 2,
vbar = sqrt(vxbar^2 + vybar^2 + vzbar^2),
aDrag = - (ax * vxbar + ay * vybar + (az + 32.174) * (vzbar)) / vbar,
Cd = aDrag / (K * vbar^2),
aMx = ax + aDrag * vxbar / vbar,
aMy = ay + aDrag * vybar / vbar,
aMz = az + aDrag * vzbar / vbar + 32.174,
aM = sqrt(aMx^2 + aMy^2 + aMz^2))
data <- data %>%
mutate(yR = 60.5 - extension,
tR = (- vy0 - sqrt((vy0)^2 - 2 * ay * (50 - yR))) / ay,
vxR = vx0 + ax * tR,
vyR = vy0 + ay * tR,
vzR = vz0 + az * tR,
tf = (-vyR - sqrt((vyR)^2 - 2 * ay * (yR - 17 / 12))) / ay,
vxbar = (2 * vxR + ax * tf) / 2,
vybar = (2 * vyR + ay * tf) / 2,
vzbar = (2 * vzR + az * tf) / 2,
vbar = sqrt(vxbar^2 + vybar^2 + vzbar^2),
aDrag = - (ax * vxbar + ay * vybar + (az + 32.174) * (vzbar)) / vbar,
Cd = aDrag / (K * vbar^2),
aMx = ax + aDrag * vxbar / vbar,
aMy = ay + aDrag * vybar / vbar,
aMz = az + aDrag * vzbar / vbar + 32.174,
aM = sqrt(aMx^2 + aMy^2 + aMz^2),
Mx = 1 / 2 * ax * tf^2 * 12,
Mz = 1 / 2 * az + tf^2 * 12,
CL = aM / (K * vbar^2),
S = 0.166 * log(0.336 / (0.336 - CL)))
data <- data %>%
mutate(yR = 60.5 - extension,
tR = (- vy0 - sqrt((vy0)^2 - 2 * ay * (50 - yR))) / ay,
vxR = vx0 + ax * tR,
vyR = vy0 + ay * tR,
vzR = vz0 + az * tR,
tf = (-vyR - sqrt((vyR)^2 - 2 * ay * (yR - 17 / 12))) / ay,
vxbar = (2 * vxR + ax * tf) / 2,
vybar = (2 * vyR + ay * tf) / 2,
vzbar = (2 * vzR + az * tf) / 2,
vbar = sqrt(vxbar^2 + vybar^2 + vzbar^2),
aDrag = - (ax * vxbar + ay * vybar + (az + 32.174) * (vzbar)) / vbar,
Cd = aDrag / (K * vbar^2),
aMx = ax + aDrag * vxbar / vbar,
aMy = ay + aDrag * vybar / vbar,
aMz = az + aDrag * vzbar / vbar + 32.174,
aM = sqrt(aMx^2 + aMy^2 + aMz^2),
Mx = 1 / 2 * ax * tf^2 * 12,
Mz = 1 / 2 * az + tf^2 * 12,
CL = aM / (K * vbar^2),
S = 0.166 * log(0.336 / (0.336 - CL)), na.rm = TRUE)
data <- dbGetQuery(db, "select * from fs_pitches where season = 2021")
db <- connect_db("uiuc")
data <- dbGetQuery(db, "select * from fs_pitches where season = 2021")
dbDisconnect(db)
data <- data %>%
mutate(yR = 60.5 - extension,
tR = (- vy0 - sqrt((vy0)^2 - 2 * ay * (50 - yR))) / ay,
vxR = vx0 + ax * tR,
vyR = vy0 + ay * tR,
vzR = vz0 + az * tR,
tf = (-vyR - sqrt((vyR)^2 - 2 * ay * (yR - 17 / 12))) / ay,
vxbar = (2 * vxR + ax * tf) / 2,
vybar = (2 * vyR + ay * tf) / 2,
vzbar = (2 * vzR + az * tf) / 2,
vbar = sqrt(vxbar^2 + vybar^2 + vzbar^2),
aDrag = - (ax * vxbar + ay * vybar + (az + 32.174) * (vzbar)) / vbar,
Cd = aDrag / (K * vbar^2),
aMx = ax + aDrag * vxbar / vbar,
aMy = ay + aDrag * vybar / vbar,
aMz = az + aDrag * vzbar / vbar + 32.174,
aM = sqrt(aMx^2 + aMy^2 + aMz^2),
Mx = 1 / 2 * ax * tf^2 * 12,
Mz = 1 / 2 * az + tf^2 * 12,
CL = aM / (K * vbar^2),
S = 0.166 * log(0.336 / (0.336 - CL)))
View(data)
data <- data %>%
mutate(yR = 60.5 - extension,
tR = (- vy0 - sqrt((vy0)^2 - 2 * ay * (50 - yR))) / ay,
vxR = vx0 + ax * tR,
vyR = vy0 + ay * tR,
vzR = vz0 + az * tR,
tf = (-vyR - sqrt((vyR)^2 - 2 * ay * (yR - 17 / 12))) / ay,
vxbar = (2 * vxR + ax * tf) / 2,
vybar = (2 * vyR + ay * tf) / 2,
vzbar = (2 * vzR + az * tf) / 2,
vbar = sqrt(vxbar^2 + vybar^2 + vzbar^2),
aDrag = - (ax * vxbar + ay * vybar + (az + 32.174) * (vzbar)) / vbar,
Cd = aDrag / (K * vbar^2),
aMx = ax + aDrag * vxbar / vbar,
aMy = ay + aDrag * vybar / vbar,
aMz = az + aDrag * vzbar / vbar + 32.174,
aM = sqrt(aMx^2 + aMy^2 + aMz^2),
Mx = 1 / 2 * ax * tf^2 * 12,
Mz = 1 / 2 * az + tf^2 * 12,
CL = aM / (K * vbar^2),
S = 0.166 * log(0.336 / (0.336 - CL)),
wT = S * vbar / r,
spin_eff = wT / spin_rate)
data <- data %>%
mutate(yR = 60.5 - extension,
tR = (- vy0 - sqrt((vy0)^2 - 2 * ay * (50 - yR))) / ay,
vxR = vx0 + ax * tR,
vyR = vy0 + ay * tR,
vzR = vz0 + az * tR,
tf = (-vyR - sqrt((vyR)^2 - 2 * ay * (yR - 17 / 12))) / ay,
vxbar = (2 * vxR + ax * tf) / 2,
vybar = (2 * vyR + ay * tf) / 2,
vzbar = (2 * vzR + az * tf) / 2,
vbar = sqrt(vxbar^2 + vybar^2 + vzbar^2),
aDrag = - (ax * vxbar + ay * vybar + (az + 32.174) * (vzbar)) / vbar,
Cd = aDrag / (K * vbar^2),
aMx = ax + aDrag * vxbar / vbar,
aMy = ay + aDrag * vybar / vbar,
aMz = az + aDrag * vzbar / vbar + 32.174,
aM = sqrt(aMx^2 + aMy^2 + aMz^2),
Mx = 1 / 2 * ax * tf^2 * 12,
Mz = 1 / 2 * az + tf^2 * 12,
CL = aM / (K * vbar^2),
S = 0.166 * log(0.336 / (0.336 - CL)),
wT = 78.92 * S * vbar,
spin_eff = wT / spin_rate)
