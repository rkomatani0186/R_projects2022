library(baseballr)
library(dplyr)
library(ggplot2)
library(plyr)
library(gridExtra)
library(ggpubr)
#Function for filtering data for players with 502 at bats or more
filter_data <- function(data) {
filtered_data <- data %>%
group_by(player_name) %>%
summarize(AB = n()) %>%
filter(AB >= 502)
return(filtered_data$player_name)
}
data <- read.csv("C:/Users/12244/CSV_2021/sc.csv")
#Function to obtain the launch angle that gives the maximum exit velocity when using quadratic fit
la_for_peak_ev <- function(batter) {
#Narrow data into Batter Name, Exit Velocity, and Launch Angle with non NA value
data_batter <- data %>%
select(player_name, launch_speed, launch_angle) %>%
na.omit() %>%
filter(player_name == batter)
#Label data with launch angle for every bins of width 5 degrees
data_batter <- data_batter %>%
mutate(group = case_when(launch_angle < -85 ~ "A",
launch_angle >= -85 & launch_angle < -80 ~ "B",
launch_angle >= -80 & launch_angle < -75 ~ "C",
launch_angle >= -75 & launch_angle < -70 ~ "D",
launch_angle >= -70 & launch_angle < -65 ~ "E",
launch_angle >= -65 & launch_angle < -60 ~ "F",
launch_angle >= -60 & launch_angle < -55 ~ "G",
launch_angle >= -55 & launch_angle < -50 ~ "H",
launch_angle >= -50 & launch_angle < -45 ~ "I",
launch_angle >= -45 & launch_angle < -40 ~ "J",
launch_angle >= -40 & launch_angle < -35 ~ "K",
launch_angle >= -35 & launch_angle < -30 ~ "L",
launch_angle >= -30 & launch_angle < -25 ~ "M",
launch_angle >= -25 & launch_angle < -20 ~ "N",
launch_angle >= -20 & launch_angle < -15 ~ "O",
launch_angle >= -15 & launch_angle < -10 ~ "P",
launch_angle >= -10 & launch_angle < -5 ~ "Q",
launch_angle >= -5 & launch_angle < 0 ~ "R",
launch_angle >= 0 & launch_angle < 5 ~ "S",
launch_angle >= 5 & launch_angle < 10 ~ "T",
launch_angle >= 10 & launch_angle < 15 ~ "U",
launch_angle >= 15 & launch_angle < 20 ~ "V",
launch_angle >= 20 & launch_angle < 25 ~ "W",
launch_angle >= 25 & launch_angle < 30 ~ "X",
launch_angle >= 30 & launch_angle < 35 ~ "Y",
launch_angle >= 35 & launch_angle < 40 ~ "Z",
launch_angle >= 40 & launch_angle < 45 ~ "AA",
launch_angle >= 45 & launch_angle < 50 ~ "AB",
launch_angle >= 50 & launch_angle < 55 ~ "AC",
launch_angle >= 55 & launch_angle < 60 ~ "AD",
launch_angle >= 60 & launch_angle < 65 ~ "AE",
launch_angle >= 65 & launch_angle < 70 ~ "AF",
launch_angle >= 70 & launch_angle < 75 ~ "AG",
launch_angle >= 75 & launch_angle < 80 ~ "AH",
launch_angle >= 80 & launch_angle < 85 ~ "AI",
launch_angle >= 85 & launch_angle < 90 ~ "AJ",
launch_angle >= 90 & launch_angle < 95 ~ "AK"
))
#Create data set of top 5 exit velocity within each bins
top_5_data <- data_batter %>%
group_by(group) %>%
slice_max(order_by = launch_speed, n = 5) %>%
mutate(top_5 = "Yes") %>%
filter(launch_angle > -40)
#Create a quadratic regression for top 5 data
top_5_data$launch_angle2 = top_5_data$launch_angle^2
quadratic_fit <- lm(launch_speed ~ launch_angle + launch_angle2, data = top_5_data)
#return launch angle that gives the maximum exit velocity
return(list(top_5_data$launch_angle[which.max(predict(quadratic_fit))], max(predict(quadratic_fit))))
}
#obtain data for batters with AB > 502
qualified_batters <- data %>%
filter(player_name %in% filter_data(data))
#Obtain data with batter name, launch angle that gives max exit velo, and max exit velo
df <- data.frame(hitter = " ", launch_angle = 0, exit_velo = 0)
for(batter in unique(qualified_batters$player_name)) {
new_df <- data.frame(hitter = batter, launch_angle = as.numeric(la_for_peak_ev(batter)[1]), exit_velo = as.numeric(la_for_peak_ev(batter)[2]))
df <- rbind(df, new_df)
}
df <- df[-c(1), ]
min_la_player <- df %>%
filter(launch_angle == min(df$launch_angle))
min_la_player
max_la_player <- df %>%
filter(launch_angle == max(df$launch_angle))
max_la_player
#obtain data for batters with AB > 502
qualified_batters <- data %>%
filter(player_name %in% filter_data(data))
#Obtain data with batter name, launch angle that gives max exit velo, and max exit velo
df <- data.frame(hitter = " ", launch_angle = 0, exit_velo = 0)
for(batter in unique(qualified_batters$player_name)) {
new_df <- data.frame(hitter = batter, launch_angle = as.numeric(la_for_peak_ev(batter)[1]), exit_velo = as.numeric(la_for_peak_ev(batter)[2]))
df <- rbind(df, new_df)
}
df <- df[-c(1), ]
min_la_player <- df %>%
filter(launch_angle == min(df$launch_angle))
min_la_player
max_la_player <- df %>%
filter(launch_angle == max(df$launch_angle))
max_la_player
#Function for filtering data for players with 502 at bats or more
filter_data <- function(data) {
filtered_data <- data %>%
group_by(player_name) %>%
summarize(AB = n()) %>%
filter(AB >= 502)
return(filtered_data$player_name)
}
#Function to obtain the launch angle that gives the maximum exit velocity when using quadratic fit
la_for_peak_ev <- function(batter) {
#Narrow data into Batter Name, Exit Velocity, and Launch Angle with non NA value
data_batter <- data %>%
select(player_name, launch_speed, launch_angle) %>%
na.omit() %>%
filter(player_name == batter)
#Label data with launch angle for every bins of width 5 degrees
data_batter <- data_batter %>%
mutate(group = case_when(launch_angle < -85 ~ "A",
launch_angle >= -85 & launch_angle < -80 ~ "B",
launch_angle >= -80 & launch_angle < -75 ~ "C",
launch_angle >= -75 & launch_angle < -70 ~ "D",
launch_angle >= -70 & launch_angle < -65 ~ "E",
launch_angle >= -65 & launch_angle < -60 ~ "F",
launch_angle >= -60 & launch_angle < -55 ~ "G",
launch_angle >= -55 & launch_angle < -50 ~ "H",
launch_angle >= -50 & launch_angle < -45 ~ "I",
launch_angle >= -45 & launch_angle < -40 ~ "J",
launch_angle >= -40 & launch_angle < -35 ~ "K",
launch_angle >= -35 & launch_angle < -30 ~ "L",
launch_angle >= -30 & launch_angle < -25 ~ "M",
launch_angle >= -25 & launch_angle < -20 ~ "N",
launch_angle >= -20 & launch_angle < -15 ~ "O",
launch_angle >= -15 & launch_angle < -10 ~ "P",
launch_angle >= -10 & launch_angle < -5 ~ "Q",
launch_angle >= -5 & launch_angle < 0 ~ "R",
launch_angle >= 0 & launch_angle < 5 ~ "S",
launch_angle >= 5 & launch_angle < 10 ~ "T",
launch_angle >= 10 & launch_angle < 15 ~ "U",
launch_angle >= 15 & launch_angle < 20 ~ "V",
launch_angle >= 20 & launch_angle < 25 ~ "W",
launch_angle >= 25 & launch_angle < 30 ~ "X",
launch_angle >= 30 & launch_angle < 35 ~ "Y",
launch_angle >= 35 & launch_angle < 40 ~ "Z",
launch_angle >= 40 & launch_angle < 45 ~ "AA",
launch_angle >= 45 & launch_angle < 50 ~ "AB",
launch_angle >= 50 & launch_angle < 55 ~ "AC",
launch_angle >= 55 & launch_angle < 60 ~ "AD",
launch_angle >= 60 & launch_angle < 65 ~ "AE",
launch_angle >= 65 & launch_angle < 70 ~ "AF",
launch_angle >= 70 & launch_angle < 75 ~ "AG",
launch_angle >= 75 & launch_angle < 80 ~ "AH",
launch_angle >= 80 & launch_angle < 85 ~ "AI",
launch_angle >= 85 & launch_angle < 90 ~ "AJ",
launch_angle >= 90 & launch_angle < 95 ~ "AK"
))
#Create data set of top 5 exit velocity within each bins
top_5_data <- data_batter %>%
group_by(group) %>%
slice_max(order_by = launch_speed, n = 5) %>%
mutate(top_5 = "Yes") %>%
filter(launch_angle > -40)
#Create a quadratic regression for top 5 data
top_5_data$launch_angle2 = top_5_data$launch_angle^2
quadratic_fit <- lm(launch_speed ~ launch_angle + launch_angle2, data = top_5_data)
#return launch angle that gives the maximum exit velocity
return(list(top_5_data$launch_angle[which.max(predict(quadratic_fit))], max(predict(quadratic_fit))))
}
qualified_batters <- data %>%
filter(player_name %in% filter_data(data))
View(qualified_batters)
filter_data(data)
View(data)
filter_data(data)
rlang::last_error()
#Function for filtering data for players with 502 at bats or more
filter_data <- function(data) {
filtered_data <- data %>%
group_by(player_name) %>%
summarize(AB = n()) %>%
filter(AB >= 502)
return(filtered_data$player_name)
}
library(dplyr)
library(ggplot2)
library(plyr)
library(gridExtra)
library(ggpubr)
library(DBI)
library(RSQLite)
library(baseballr)
filter_data(data)
data2 <- data %>%
group_by(player_name)
data2 <- data %>%
group_by(player_name) %>%
summarize(AB = n())
View(data2)
data2 <- data %>%
group_by(player_name)
data2 <- data %>%
group_by(player_name) %>%
summarize(count = n())
filter_data <- function(data) {
filtered_data <- data %>%
group_by(player_name) %>%
summarize(AB = dplyr::n()) %>%
filter(AB >= 502)
return(filtered_data$player_name)
}
data2 <- data %>%
group_by(player_name) %>%
summarize(count = n())
data2 <- data %>%
group_by(player_name) %>%
summarize(count = dplyr::n())
data2 <- data %>%
group_by(player_name) %>%
dplyr::summarize(count = n())
#Function for filtering data for players with 502 at bats or more
filter_data <- function(data) {
filtered_data <- data %>%
group_by(player_name) %>%
dplyr::summarize(AB = dplyr::n()) %>%
filter(AB >= 502)
return(filtered_data$player_name)
}
qualified_batters <- data %>%
filter(player_name %in% filter_data(data))
df <- data.frame(hitter = " ", launch_angle = 0, exit_velo = 0)
for(batter in unique(qualified_batters$player_name)) {
new_df <- data.frame(hitter = batter, launch_angle = as.numeric(la_for_peak_ev(batter)[1]), exit_velo = as.numeric(la_for_peak_ev(batter)[2]))
df <- rbind(df, new_df)
}
df <- df[-c(1), ]
min_la_player <- df %>%
filter(launch_angle == min(df$launch_angle))
max_la_player <- df %>%
filter(launch_angle == max(df$launch_angle))
min_la_player
max_la_player
#Function for plotting Exit Velocity vs Launch Angle
plot_ev_vs_la <- function(batter) {
#Narrow data into Batter Name, Exit Velocity, and Launch Angle with non NA value
data_batter <- data %>%
select(player_name, launch_speed, launch_angle) %>%
na.omit() %>%
filter(player_name == batter)
#Label data with launch angle for every bins of width 5 degrees
data_batter <- data_batter %>%
mutate(group = case_when(launch_angle < -85 ~ "A",
launch_angle >= -85 & launch_angle < -80 ~ "B",
launch_angle >= -80 & launch_angle < -75 ~ "C",
launch_angle >= -75 & launch_angle < -70 ~ "D",
launch_angle >= -70 & launch_angle < -65 ~ "E",
launch_angle >= -65 & launch_angle < -60 ~ "F",
launch_angle >= -60 & launch_angle < -55 ~ "G",
launch_angle >= -55 & launch_angle < -50 ~ "H",
launch_angle >= -50 & launch_angle < -45 ~ "I",
launch_angle >= -45 & launch_angle < -40 ~ "J",
launch_angle >= -40 & launch_angle < -35 ~ "K",
launch_angle >= -35 & launch_angle < -30 ~ "L",
launch_angle >= -30 & launch_angle < -25 ~ "M",
launch_angle >= -25 & launch_angle < -20 ~ "N",
launch_angle >= -20 & launch_angle < -15 ~ "O",
launch_angle >= -15 & launch_angle < -10 ~ "P",
launch_angle >= -10 & launch_angle < -5 ~ "Q",
launch_angle >= -5 & launch_angle < 0 ~ "R",
launch_angle >= 0 & launch_angle < 5 ~ "S",
launch_angle >= 5 & launch_angle < 10 ~ "T",
launch_angle >= 10 & launch_angle < 15 ~ "U",
launch_angle >= 15 & launch_angle < 20 ~ "V",
launch_angle >= 20 & launch_angle < 25 ~ "W",
launch_angle >= 25 & launch_angle < 30 ~ "X",
launch_angle >= 30 & launch_angle < 35 ~ "Y",
launch_angle >= 35 & launch_angle < 40 ~ "Z",
launch_angle >= 40 & launch_angle < 45 ~ "AA",
launch_angle >= 45 & launch_angle < 50 ~ "AB",
launch_angle >= 50 & launch_angle < 55 ~ "AC",
launch_angle >= 55 & launch_angle < 60 ~ "AD",
launch_angle >= 60 & launch_angle < 65 ~ "AE",
launch_angle >= 65 & launch_angle < 70 ~ "AF",
launch_angle >= 70 & launch_angle < 75 ~ "AG",
launch_angle >= 75 & launch_angle < 80 ~ "AH",
launch_angle >= 80 & launch_angle < 85 ~ "AI",
launch_angle >= 85 & launch_angle < 90 ~ "AJ",
launch_angle >= 90 & launch_angle < 95 ~ "AK"
))
#Create data set of top 5 exit velocity within each bins
top_5_data <- data_batter %>%
group_by(group) %>%
slice_max(order_by = launch_speed, n = 5) %>%
mutate(top_5 = "Yes") %>%
filter(launch_angle > -40)
#Join two data
data2 <- left_join(data_batter, top_5_data, by = c("player_name", "launch_speed", "launch_angle", "group"))
#Indicate whether or not the exit velocity is in top 5
data2 <- data2 %>%
mutate(top_5 = ifelse(is.na(top_5), "No", top_5)) %>%
filter(launch_angle > -40, launch_speed > 50)
#Create a quadratic regression for top 5 data
top_5_data$launch_angle2 = top_5_data$launch_angle^2
quadratic_fit <- lm(launch_speed ~ launch_angle + launch_angle2, data = top_5_data)
#Scatter plot data differentiating the top 5 points by color and indicating the maximum predicted value for the launch angle that gives the max exit velocity using the quadratic regression
ggplot(data2) +
geom_point(aes(launch_angle, launch_speed, color = top_5)) +
scale_color_manual(values = c("red", "blue")) +
stat_smooth(method = "lm", formula = y ~ x + I(x^2), data = top_5_data, aes(launch_angle, launch_speed), color = "black", se = FALSE) +
geom_vline(aes(xintercept = top_5_data$launch_angle[which.max(predict(quadratic_fit))]), linetype = "dashed") +
ggtitle(paste("Exit Velocity vs Launch Angle of", batter)) +
scale_x_continuous(name = "Launch Angle (deg)", breaks = seq(-40, 80, by = 10)) +
scale_y_continuous(name = "Exit Velocity (mph)", breaks = seq(50, 120, by = 20)) +
annotate(geom = "text", label = top_5_data$launch_angle[which.max(predict(quadratic_fit))], x = top_5_data$launch_angle[which.max(predict(quadratic_fit))], y = 50, vjust = 1)
}
Fletcher_plot <- plot_ev_vs_la("Fletcher, David")
Rogers_plot <- plot_ev_vs_la("Rogers, Jake")
ggarrange(Fletcher_plot, Rogers_plot)
filter(player_name == "Rogers, Jake:)"
rogers_data <- data %>%
filter(player_name == "Rogers, Jake")
View(rogers_data)
la_ev_batter <- function(data) {
df <- data.frame(hitter = " ", launch_angle = 0, exit_velo = 0)
for(batter in unique(data$player_name)) {
new_df <- data.frame(hitter = batter, launch_angle = as.numeric(la_for_peak_ev(batter)[1]), exit_velo = as.numeric(la_for_peak_ev(batter)[2]))
df <- rbind(df, new_df)
}
df <- df[-c(1), ]
return(df)
}
la_ev_batter(qualified_batters)
q_data <- la_ev_batter(qualified_batters)
min_la_player <- q_data %>%
filter(launch_angle == min(d_data$launch_angle))
min_la_player <- q_data %>%
filter(launch_angle == min(q_data$launch_angle))
min_la_player
max_la_player <- q_data %>%
filter(launch_angle == max(q_data$launch_angle))
max_la_player
q_data <- q_data %>%
arrange(launch_angle)
View(new_df)
View(q_data)
q_data$player_name[1]
q_data$player_name[2]
q_data$player_name
q_data$hitter[1]
q_data(hitter[-1])
q_data$hitter[-1]
q_data$hitter[length(q_data)]
q_data$hitter[length(q_data$hitter)]
q_data$hitter[length(q_data$hitter) - 1]
ggarrange(plot_ev_vs_la(q_data$hitter[1]), plot_ev_vs_la(q_data$hitter[2]), plot_ev_vs_la(q_data$hitter[3]),
plot_ev_vs_la(q_data$hitter[length(q_data$hitter)]), plot_ev_vs_la(q_data$hitter[length(q_data$hitter)] - 1), plot_ev_vs_la(q_data$hitter[length(q_data$hitter)] - 2), ncol = 3)
ggarrange(plot_ev_vs_la(q_data$hitter[1]), plot_ev_vs_la(q_data$hitter[2]), plot_ev_vs_la(q_data$hitter[3]),
plot_ev_vs_la(q_data$hitter[length(q_data$hitter)]), plot_ev_vs_la(q_data$hitter[length(q_data$hitter) - 1]), plot_ev_vs_la(q_data$hitter[length(q_data$hitter) - 2]), ncol = 3)
plot_ev_vs_la(q_data$hitter[length(q_data$hitter) - 2])
ggarrange(plot_ev_vs_la(q_data$hitter[1]), plot_ev_vs_la(q_data$hitter[2]), plot_ev_vs_la(q_data$hitter[3]),
plot_ev_vs_la(q_data$hitter[length(q_data$hitter)]), plot_ev_vs_la(q_data$hitter[length(q_data$hitter) - 1]), plot_ev_vs_la(q_data$hitter[length(q_data$hitter) - 2]), ncol = 3, nrow = 2)
#Function for filtering data for players with 1000 at bats or more
filter_data <- function(data) {
filtered_data <- data %>%
group_by(player_name) %>%
dplyr::summarize(AB = dplyr::n()) %>%
filter(AB >= 1000)
return(filtered_data$player_name)
}
#Function to obtain the launch angle that gives the maximum exit velocity when using quadratic fit
la_for_peak_ev <- function(batter) {
#Narrow data into Batter Name, Exit Velocity, and Launch Angle with non NA value
data_batter <- data %>%
select(player_name, launch_speed, launch_angle) %>%
na.omit() %>%
filter(player_name == batter)
#Label data with launch angle for every bins of width 5 degrees
data_batter <- data_batter %>%
mutate(group = case_when(launch_angle < -85 ~ "A",
launch_angle >= -85 & launch_angle < -80 ~ "B",
launch_angle >= -80 & launch_angle < -75 ~ "C",
launch_angle >= -75 & launch_angle < -70 ~ "D",
launch_angle >= -70 & launch_angle < -65 ~ "E",
launch_angle >= -65 & launch_angle < -60 ~ "F",
launch_angle >= -60 & launch_angle < -55 ~ "G",
launch_angle >= -55 & launch_angle < -50 ~ "H",
launch_angle >= -50 & launch_angle < -45 ~ "I",
launch_angle >= -45 & launch_angle < -40 ~ "J",
launch_angle >= -40 & launch_angle < -35 ~ "K",
launch_angle >= -35 & launch_angle < -30 ~ "L",
launch_angle >= -30 & launch_angle < -25 ~ "M",
launch_angle >= -25 & launch_angle < -20 ~ "N",
launch_angle >= -20 & launch_angle < -15 ~ "O",
launch_angle >= -15 & launch_angle < -10 ~ "P",
launch_angle >= -10 & launch_angle < -5 ~ "Q",
launch_angle >= -5 & launch_angle < 0 ~ "R",
launch_angle >= 0 & launch_angle < 5 ~ "S",
launch_angle >= 5 & launch_angle < 10 ~ "T",
launch_angle >= 10 & launch_angle < 15 ~ "U",
launch_angle >= 15 & launch_angle < 20 ~ "V",
launch_angle >= 20 & launch_angle < 25 ~ "W",
launch_angle >= 25 & launch_angle < 30 ~ "X",
launch_angle >= 30 & launch_angle < 35 ~ "Y",
launch_angle >= 35 & launch_angle < 40 ~ "Z",
launch_angle >= 40 & launch_angle < 45 ~ "AA",
launch_angle >= 45 & launch_angle < 50 ~ "AB",
launch_angle >= 50 & launch_angle < 55 ~ "AC",
launch_angle >= 55 & launch_angle < 60 ~ "AD",
launch_angle >= 60 & launch_angle < 65 ~ "AE",
launch_angle >= 65 & launch_angle < 70 ~ "AF",
launch_angle >= 70 & launch_angle < 75 ~ "AG",
launch_angle >= 75 & launch_angle < 80 ~ "AH",
launch_angle >= 80 & launch_angle < 85 ~ "AI",
launch_angle >= 85 & launch_angle < 90 ~ "AJ",
launch_angle >= 90 & launch_angle < 95 ~ "AK"
))
#Create data set of top 5 exit velocity within each bins
top_5_data <- data_batter %>%
group_by(group) %>%
slice_max(order_by = launch_speed, n = 5) %>%
mutate(top_5 = "Yes") %>%
filter(launch_angle > -40)
#Create a quadratic regression for top 5 data
top_5_data$launch_angle2 = top_5_data$launch_angle^2
quadratic_fit <- lm(launch_speed ~ launch_angle + launch_angle2, data = top_5_data)
#return launch angle that gives the max exit velocity and max exit velocity as a list
return(list(top_5_data$launch_angle[which.max(predict(quadratic_fit))], max(predict(quadratic_fit))))
}
#obtain data for batters with AB > 502
qualified_batters <- data %>%
filter(player_name %in% filter_data(data))
#Obtain data with batter name, launch angle that gives max exit velocity, and max exit velocity
la_ev_batter <- function(data) {
df <- data.frame(hitter = " ", launch_angle = 0, exit_velo = 0)
for(batter in unique(data$player_name)) {
new_df <- data.frame(hitter = batter, launch_angle = as.numeric(la_for_peak_ev(batter)[1]), exit_velo = as.numeric(la_for_peak_ev(batter)[2]))
df <- rbind(df, new_df)
}
df <- df[-c(1), ]
return(df)
}
#Get data for qualified batters
q_data <- la_ev_batter(qualified_batters)
q_data <- q_data %>%
arrange(launch_angle)
#player with min launch angle
min_la_player <- q_data %>%
filter(launch_angle == min(q_data$launch_angle))
min_la_player
#player with max launch angle
max_la_player <- q_data %>%
filter(launch_angle == max(q_data$launch_angle))
max_la_player
ggarrange(plot_ev_vs_la(q_data$hitter[1]), plot_ev_vs_la(q_data$hitter[2]), plot_ev_vs_la(q_data$hitter[3]),
plot_ev_vs_la(q_data$hitter[length(q_data$hitter)]), plot_ev_vs_la(q_data$hitter[length(q_data$hitter) - 1]), plot_ev_vs_la(q_data$hitter[length(q_data$hitter) - 2]), ncol = 3, nrow = 2)
q <- q_data %>%
filter(hitter == Vogt, Stephen)
q <- q_data %>%
filter(hitter == "Vogt, Stephen")
View(q)
q <- data %>%
filter(hitter == "Vogt, Stephen")
q <- data %>%
filter(player_name == "Vogt, Stephen")
View(q)
ggarrange(plot_ev_vs_la(q_data$hitter[1]), plot_ev_vs_la(q_data$hitter[2]), plot_ev_vs_la(q_data$hitter[3]),
plot_ev_vs_la(q_data$hitter[length(q_data$hitter)]), plot_ev_vs_la(q_data$hitter[length(q_data$hitter) - 1]), plot_ev_vs_la(q_data$hitter[length(q_data$hitter) - 2]),
plot_ev_vs_la("Ohtani, Shohei"), plot_ev_vs_la("Harper, Bryce"), plot_ev_vs_la("Turner, Stuart"), ncol = 3, nrow = 3)
q <- data %>%
filter(player_name == "Harper, Bryce")
q <- data %>%
filter(player_name == "Ohtani, Shohei")
q <- data %>%
filter(player_name == "Turner, Stuart")
View(data)
View(data)
View(qualified_batters)
View(q_data)
ggarrange(plot_ev_vs_la(q_data$hitter[1]), plot_ev_vs_la(q_data$hitter[2]), plot_ev_vs_la(q_data$hitter[3]),
plot_ev_vs_la(q_data$hitter[length(q_data$hitter)]), plot_ev_vs_la(q_data$hitter[length(q_data$hitter) - 1]), plot_ev_vs_la(q_data$hitter[length(q_data$hitter) - 2]),
plot_ev_vs_la("Ohtani, Shohei"), plot_ev_vs_la("Harper, Bryce"), plot_ev_vs_la("Turner, Trea"), ncol = 3, nrow = 3)
plot1 <- ggarrange(plot_ev_vs_la(q_data$hitter[1]), plot_ev_vs_la(q_data$hitter[2]), plot_ev_vs_la(q_data$hitter[3]),
plot_ev_vs_la(q_data$hitter[length(q_data$hitter)]), plot_ev_vs_la(q_data$hitter[length(q_data$hitter) - 1]), plot_ev_vs_la(q_data$hitter[length(q_data$hitter) - 2]), ncol = 3, nrow = 2)
plot2 <- ggarrange(plot_ev_vs_la("Perez, Salvador"), plot_ev_vs_la("Guerrero Jr., Vladimir"), plot_ev_vs_la("Ohtani, Shohei"))
plot2
#Hitters with highest average
plot3 <- ggarrange(plot_ev_vs_la("Turner, Trea"), plot_ev_vs_la("Gurriel, Yuri"), plot_ev_vs_la("Soto, Juan"))
#Hitters with highest average
plot3 <- ggarrange(plot_ev_vs_la("Turner, Trea"), plot_ev_vs_la("Gurriel, Yuli"), plot_ev_vs_la("Soto, Juan"))
plot_3
plot3
plot4 <- ggarrange(plot_ev_vs_la("Harper, Bryce"), plot_ev_vs_la("Tatis Jr., Fernando"), plot_ev_vs_la("Guerrero Jr., Vladimir"))
plot4
plot3 <- ggarrange(plot_ev_vs_la("Turner, Trea"), plot_ev_vs_la("Gurriel, Yuli"), plot_ev_vs_la("Soto, Juan"), plot_ev_vs_la("Brantley, Michael"))
plot3
plot2 <- ggarrange(plot_ev_vs_la("Perez, Salvador"), plot_ev_vs_la("Guerrero Jr., Vladimir"), plot_ev_vs_la("Ohtani, Shohei"), plot_ev_vs_la("Semien, Marcus"))
plot2
plot4 <- ggarrange(plot_ev_vs_la("Harper, Bryce"), plot_ev_vs_la("Tatis Jr., Fernando"), plot_ev_vs_la("Guerrero Jr., Vladimir"), plot_ev_vs_la("Ohtani, Shohei"))
plot4
plot2
ggarrange(plot2, plot3, plot4)
ggarrange(plot2, plot3, plot4, nrow = 3)
ggarrange(plot2, plot3, plot4, ncol = 4)
ggarrange(plot2, plot3, plot4, ncol = 4, nrow = 3)
plot2
plot3
plot4
plot2
